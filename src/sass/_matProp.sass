// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$spr-castable-name: 'sprCastable'
$spr-castable-x: 0px
$spr-castable-y: 0px
$spr-castable-offset-x: 0px
$spr-castable-offset-y: 0px
$spr-castable-width: 54px
$spr-castable-height: 54px
$spr-castable-total-width: 216px
$spr-castable-total-height: 54px
$spr-castable-image: '../img/materialProp.png'
$spr-castable: (0px, 0px, 0px, 0px, 54px, 54px, 216px, 54px, '../img/materialProp.png', 'sprCastable', )
$spr-firm-name: 'sprFirm'
$spr-firm-x: 54px
$spr-firm-y: 0px
$spr-firm-offset-x: -54px
$spr-firm-offset-y: 0px
$spr-firm-width: 54px
$spr-firm-height: 54px
$spr-firm-total-width: 216px
$spr-firm-total-height: 54px
$spr-firm-image: '../img/materialProp.png'
$spr-firm: (54px, 0px, -54px, 0px, 54px, 54px, 216px, 54px, '../img/materialProp.png', 'sprFirm', )
$spr-flexible-name: 'sprFlexible'
$spr-flexible-x: 108px
$spr-flexible-y: 0px
$spr-flexible-offset-x: -108px
$spr-flexible-offset-y: 0px
$spr-flexible-width: 54px
$spr-flexible-height: 54px
$spr-flexible-total-width: 216px
$spr-flexible-total-height: 54px
$spr-flexible-image: '../img/materialProp.png'
$spr-flexible: (108px, 0px, -108px, 0px, 54px, 54px, 216px, 54px, '../img/materialProp.png', 'sprFlexible', )
$spr-hard-name: 'sprHard'
$spr-hard-x: 162px
$spr-hard-y: 0px
$spr-hard-offset-x: -162px
$spr-hard-offset-y: 0px
$spr-hard-width: 54px
$spr-hard-height: 54px
$spr-hard-total-width: 216px
$spr-hard-total-height: 54px
$spr-hard-image: '../img/materialProp.png'
$spr-hard: (162px, 0px, -162px, 0px, 54px, 54px, 216px, 54px, '../img/materialProp.png', 'sprHard', )
$spritesheet-width: 216px
$spritesheet-height: 54px
$spritesheet-image: '../img/materialProp.png'
$spritesheet-sprites: ($spr-castable, $spr-firm, $spr-flexible, $spr-hard, )
$spritesheet: (216px, 54px, '../img/materialProp.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
